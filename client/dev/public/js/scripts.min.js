/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	//Concatenates all main index files from each directory.
	
	function addIndex(directory) {
	  return __webpack_require__(1)("./" + directory + '/index.js');
	};
	
	// require('./assets/images');
	__webpack_require__(27);
	__webpack_require__(31);
	
	addIndex('music');
	addIndex('navigation');
	addIndex('animations');

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./animations/index.js": 2,
		"./music/components/index.js": 4,
		"./music/controller/index.js": 7,
		"./music/index.js": 9,
		"./music/service/index.js": 10,
		"./navigation/controller/index.js": 20,
		"./navigation/directive/index.js": 22,
		"./navigation/index.js": 24,
		"./navigation/service/index.js": 25
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 1;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(3);

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	
	$(document).ready(function () {
	  $('.artist-box').dimmer({
	    on: 'hover'
	  });
	  $(window).resize(function () {
	    if ($(window).width() < 870) {
	      $('#player-menu').hide();
	    } else if ($(window).width() > 870) {
	      $('#player-menu').show();
	    }
	  });
	});

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(5);
	__webpack_require__(6);

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').directive('songList', function () {
	  return {
	    scope: true,
	    restrict: 'A',
	    replace: false,
	    templateUrl: 'templates/track-list.html',
	    link: function link(scope, elem, attrs) {
	      elem.bind('click', function (event) {
	        $('.ui.dropdown').dropdown('restore defaults');
	      });
	    }
	  };
	});

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * The Music Player Component
	 * @module musicPlayer
	 */

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(8);

/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').controller('musicPlayer', musicPlayer);
	
	musicPlayer.$inject = ['$scope', '$http', 'spotifySearch', 'playerControls', 'scSearch', 'tabs', 'playlists', 'searchType'];
	
	function musicPlayer($scope, $http, spotifySearch, playerControls, scSearch, tabs, playlists, searchType) {
	  var vm = this;
	  vm.topArtists;
	  vm.tracks = [];
	  vm.playlistTabs = playlists.currentPlaylists;
	  vm.playerImage = 'assets/images/music-player/default-album.png';
	  vm.playerTitle = 'Title';
	  vm.playerArtist = 'Artist';
	  vm.playerInfo = 'album';
	  vm.playStateButton = 'play icon';
	  vm.searchDisplay = searchType.searchState;
	  vm.addPlaylistState = playlists.state.addField;
	  vm.addPlaylistButton = playlists.state.addButton;
	
	  SC.initialize({ client_id: 'b10a9e77003de676a40bcd4ce7346f03' });
	
	  $scope.spotifyQuery;
	  $scope.scQuery;
	  $scope.newPlaylist;
	
	  vm.digest = function () {
	    _.defer(function () {
	      $scope.$digest();
	    });
	  };
	  vm.togglePlay = function () {
	    playerControls.togglePlay();
	  };
	  vm.playNext = function () {
	    playerControls.nextSong();
	  };
	  vm.playPrevious = function () {
	    playerControls.previousSong();
	  };
	  vm.voicePlay = function () {
	    playerControls.voicePlay();
	  };
	  vm.voicePause = function () {
	    playerControls.voicePause();
	  };
	  vm.voiceStart = function () {
	    playerControls.voiceStart();
	  };
	  vm.changeSearch = function (event) {
	    var attribute = event.target.getAttribute('data-search');
	    searchType.changeSearch(attribute);
	  };
	  vm.switchTabs = function (event, playlist) {
	    var attribute = event.target.getAttribute('data-tab');
	    var isPlaylist = event.target.getAttribute('data-playlist');
	    if (isPlaylist) {
	      playlists.displayTracks(playlist);
	    }
	    tabs.switchTabs(attribute);
	  };
	  vm.revealNewPlaylist = function () {
	    playlists.revealAddField();
	    vm.addPlaylistState = playlists.state.addField;
	    vm.addPlaylistButton = playlists.state.addButton;
	  };
	  vm.createNewPlaylist = function (event) {
	    if (event.keyCode === 13) {
	      if ($scope.newPlaylist === "" || $scope.newPlaylist === undefined) {
	        alert('please enter playlist name');
	        return;
	      }
	      playlists.createNewPlaylist($scope.newPlaylist);
	      $scope.newPlaylist = "";
	      vm.addPlaylistState = playlists.state.addField;
	      vm.addPlaylistButton = playlists.state.addButton;
	      vm.digest();
	    }
	  };
	  vm.openDropDown = function () {
	    $('.ui.dropdown').dropdown('restore defaults');
	    vm.digest();
	  };
	  vm.addTrack = function (trackKey, playlist) {
	    playlists.addTrack(trackKey, playlist);
	    vm.digest();
	  };
	  vm.removeTrack = function (trackId) {
	    playlists.removeTrack(trackId);
	  };
	  vm.voiceSearch = function (query) {
	    var attribute = 'search';
	    tabs.switchTabs(attribute);
	    scSearch.allTracks(query);
	    $scope.scQuery = "";
	  };
	  vm.scSearchEnter = function () {
	    if (event.keyCode === 13) {
	      var attribute = event.target.getAttribute('data-tab');
	      tabs.switchTabs(attribute);
	      scSearch.allTracks($scope.scQuery);
	      $scope.scQuery = "";
	      if ($(window).width() < 870) {
	        $('#player-menu').hide();
	      }
	    };
	  };
	  vm.spotifySearchEnter = function () {
	    if (event.keyCode === 13) {
	      var attribute = event.target.getAttribute('data-tab');
	      tabs.switchTabs(attribute);
	      spotifySearch.makeRequest($scope.spotifyQuery);
	      $scope.spotifyQuery = "";
	      if ($(window).width() < 870) {
	        $('#player-menu').hide();
	      }
	    }
	  };
	
	  $scope.playMusic = function (event) {
	    var song = event.target.getAttribute('data-song');
	    playerControls.playMusic(song);
	  };
	}

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(7);
	__webpack_require__(4);
	__webpack_require__(10);

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(11);
	__webpack_require__(12);
	__webpack_require__(13);
	__webpack_require__(14);
	__webpack_require__(15);
	__webpack_require__(16);
	__webpack_require__(17);
	__webpack_require__(17);
	__webpack_require__(18);
	__webpack_require__(19);

/***/ },
/* 11 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('playerControls', [function () {
	
	  var masterPlayer = new Audio();
	
	  masterPlayer.playState = {
	    playing: false,
	    currentSong: null
	  };
	
	  function getSong(song) {
	    scClient = 'b10a9e77003de676a40bcd4ce7346f03';
	    if (song.company === 'soundcloud') {
	      return 'https://api.soundcloud.com/tracks/' + song.urlSource + '/stream?client_id=' + scClient;
	    } else if (song.company === 'spotify') {
	      return song.urlSource;
	    }
	  };
	
	  function setCurrent(currentSong) {
	    var songKey = currentSong.key;
	    masterPlayer.playState.currentSong = songKey;
	  }
	
	  function setPlayerInfo(currentSong) {
	    vm.playerImage = currentSong.image;
	    vm.playerTitle = currentSong.name;
	    vm.playerArtist = currentSong.artist;
	    vm.playerInfo = currentSong.album;
	  }
	
	  masterPlayer.nextSong = function () {
	    var current = masterPlayer.playState.currentSong;
	    var next = current + 1;
	
	    if (masterPlayer.playState.playing === true && vm.tracks[next]) {
	      masterPlayer.src = getSong(vm.tracks[next]);
	      setPlayerInfo(vm.tracks[next]);
	      setCurrent(vm.tracks[next]);
	      masterPlayer.play();
	    } else if (!vm.tracks[next]) {
	      masterPlayer.src = getSong(vm.tracks[0]);
	      setPlayerInfo(vm.tracks[0]);
	      setCurrent(vm.tracks[0]);
	      masterPlayer.play();
	    }
	  };
	
	  masterPlayer.previousSong = function () {
	    var current = masterPlayer.playState.currentSong;
	    var previous = current - 1;
	
	    if (masterPlayer.playState.playing === true && vm.tracks[previous]) {
	      masterPlayer.src = getSong(vm.tracks[previous]);
	      setPlayerInfo(vm.tracks[previous]);
	      setCurrent(vm.tracks[previous]);
	      masterPlayer.play();
	    } else if (!vm.tracks[previous]) {
	      var lastTrack = vm.tracks[(0 - vm.tracks.length) * -1 - 1];
	      masterPlayer.src = getSong(lastTrack);
	      setPlayerInfo(lastTrack);
	      setCurrent(lastTrack);
	      masterPlayer.play();
	    }
	  };
	
	  masterPlayer.toggleState = function () {
	    if (masterPlayer.playState.playing === false) {
	      masterPlayer.playState.playing = true;
	      vm.playStateButton = 'pause icon';
	    } else if (masterPlayer.playState.playing === true) {
	      masterPlayer.playState.playing = false;
	      vm.playStateButton = 'play icon';
	    }
	  };
	  masterPlayer.voicePlay = function () {
	    if (masterPlayer.playState.playing === false) {
	      masterPlayer.play();
	      masterPlayer.toggleState();
	      vm.digest();
	    }
	  };
	
	  masterPlayer.voicePause = function () {
	    if (masterPlayer.playState.playing === true) {
	      masterPlayer.pause();
	      masterPlayer.toggleState();
	      vm.digest();
	    }
	  };
	
	  masterPlayer.voiceStart = function () {
	    if (vm.tracks.length > 1 && masterPlayer.playState.playing === false) {
	      masterPlayer.src = getSong(vm.tracks[0]);
	      setPlayerInfo(vm.tracks[0]);
	      setCurrent(vm.tracks[0]);
	      masterPlayer.play();
	      masterPlayer.toggleState();
	      vm.digest();
	    }
	  };
	
	  masterPlayer.togglePlay = function () {
	    if (vm.tracks.length > 1 && masterPlayer.src === '') {
	      masterPlayer.src = getSong(vm.tracks[0]);
	      setPlayerInfo(vm.tracks[0]);
	      setCurrent(vm.tracks[0]);
	    } else if (masterPlayer.src === '') {
	      return;
	    };
	    masterPlayer.playState.playing === false ? masterPlayer.play() : masterPlayer.pause();
	    masterPlayer.toggleState();
	    vm.digest();
	  };
	
	  masterPlayer.playMusic = function (song) {
	    _.each(vm.tracks, function (eachSong) {
	      if (eachSong.name === song) {
	        setCurrent(eachSong);
	        setPlayerInfo(eachSong);
	        masterPlayer.src = getSong(eachSong);
	        masterPlayer.playState.playing === false ? masterPlayer.togglePlay() : masterPlayer.play();
	        vm.digest();
	      }
	    });
	  };
	
	  return masterPlayer;
	}]);

/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('playlistConstructor', [function () {
	
	  return playlist;
	
	  function playlist(name) {
	    this.name = name;
	    this.tracks = [];
	  }
	}]);

/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('playlists', ['playlistConstructor', function (playlistConstructor) {
	
	  var samplePlaylist = new playlistConstructor('My Playlist');
	
	  var playlist = {
	    addTrack: addTrack,
	    createNewPlaylist: createNewPlaylist,
	    displayTracks: displayTracks,
	    removeTrack: removeTrack,
	    revealAddField: revealAddField,
	    state: {
	      addField: false,
	      addButton: true
	    }
	  };
	
	  playlist.currentPlaylists = [samplePlaylist];
	
	  return playlist;
	
	  function revealAddField() {
	    playlist.state.addField = true;
	    playlist.state.addButton = false;
	  }
	
	  function addTrack(trackKey, playlist) {
	    var currentPlaylist;
	
	    _.map(vm.playlistTabs, function findPlaylist(eachPlaylist) {
	      if (eachPlaylist.name === playlist) {
	        currentPlaylist = eachPlaylist;
	      }
	    });
	
	    _.map(vm.tracks, function findTrack(eachTrack) {
	      if (eachTrack.key === trackKey) {
	        currentPlaylist.tracks.push(eachTrack);
	        var removedDuplicates = _.uniq(currentPlaylist.tracks);
	        currentPlaylist.tracks = removedDuplicates;
	      }
	    });
	  }
	
	  function removeTrack(trackId) {
	    vm.tracks.forEach(function (track, i) {
	      if (track.key === trackId) {
	        vm.tracks.splice(i, 1);
	      }
	    });
	  }
	
	  function displayTracks(playlist) {
	    vm.tracks = [];
	
	    _.map(vm.playlistTabs, function (eachPlaylist, i) {
	      if (eachPlaylist.name === playlist) {
	        vm.tracks = eachPlaylist.tracks;
	      }
	    });
	
	    _.map(vm.tracks, function (eachTrack, i) {
	      eachTrack.deleteAble.changeState();
	      eachTrack.key = i;
	    });
	  }
	
	  function createNewPlaylist(name) {
	    var newPlaylist = new playlistConstructor(name);
	
	    playlist.currentPlaylists.push(newPlaylist);
	    playlist.state.addField = false;
	    playlist.state.addButton = true;
	  }
	}]);

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('scSearch', ['songConstructor', function (songConstructor) {
	
	  var search = {
	    allTracks: allTracks
	  };
	
	  return search;
	
	  function allTracks(input) {
	    var query = input;
	    function getUrl(urlStream) {
	      if (urlStream.length === 50) {
	        return urlStream.slice(-16, -7);
	      } else if (urlStream.length === 49) {
	        return urlStream.slice(-15, -7);
	      }
	    }
	
	    SC.get('/tracks', { q: query, limit: 20 }).then(function (tracks) {
	      vm.tracks = [];
	      var trackResults = tracks;
	      _.map(trackResults, function (each, i) {
	        var stream = each.stream_url;
	        var url = getUrl(stream);
	        vm.tracks.push(new songConstructor(i, each.title, each.artwork_url, each.album, each.user.username, each.duration, 'soundcloud', each.stream_url, url, each.permalink_url));
	      });
	      vm.digest();
	    });
	  };
	}]);

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('searchType', [function () {
	
	  var search = {
	    changeSearch: changeSearch,
	    searchState: {
	      sc: true,
	      spotify: false
	    }
	  };
	
	  return search;
	
	  function changeSearch(attribute) {
	
	    if (attribute === 'sc' && search.searchState.sc === false) {
	      search.searchState.sc = true;
	      search.searchState.spotify = false;
	    } else if (attribute === 'spotify' && search.searchState.spotify === false) {
	      search.searchState.spotify = true;
	      search.searchState.sc = false;
	    }
	  }
	}]);

/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('songConstructor', [function () {
	
	  return song;
	
	  function song(key, name, image, album, artist, duration, company, fetchSource, urlSource, pageSource) {
	    this.key = key;
	    this.name = name;
	    this.image = image;
	    this.album = album;
	    this.artist = artist;
	    this.duration = duration;
	    this.company = company;
	    this.fetchSource = fetchSource;
	    this.urlSource = urlSource;
	    this.pageSource = pageSource;
	    this.deleteAble = {
	      state: false,
	      changeState: function changeState() {
	        this.state = true;
	      }
	    };
	  }
	}]);

/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('spotifySearch', ['$http', 'songConstructor', function ($http, songConstructor) {
	
	  var search = {
	    makeRequest: makeRequest
	  };
	
	  return search;
	
	  function makeRequest(input) {
	    var query = JSON.stringify({ queryInput: input });
	    this.tracks = [];
	
	    $http({
	      data: query,
	      url: '/spotify',
	      method: 'POST'
	    }).then(function success(response) {
	      trackResults = response.data.tracks.items;
	      _.map(trackResults, function (each, i) {
	        vm.tracks.push(new songConstructor(i, each.name, each.album.images[1].url, each.album.name, each.artists[0].name, each.duration_ms, 'spotify', null, each.preview_url, each.external_urls.spotify));
	      });
	    });
	  }
	}]);

/***/ },
/* 18 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('tabs', [function () {
	
	  var tabSwitcher = {
	    switchTabs: switchTabs
	  };
	
	  return tabSwitcher;
	
	  function switchTabs(tabAttribute) {
	    var allPages = document.getElementsByClassName('music-page');
	    var allTabs = document.getElementsByClassName('music-tab');
	
	    for (var i = 0; i < allPages.length; i++) {
	      allPages[i].classList.add('hidden');
	
	      if (allPages[i].getAttribute('data-page') === tabAttribute) {
	        allPages[i].classList.remove('hidden');
	      }
	    }
	  }
	}]);

/***/ },
/* 19 */
/***/ function(module, exports) {



/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(21);

/***/ },
/* 21 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').controller('navController', navController);
	
	navController.$inject = ['$scope', 'userLogin'];
	
	function navController($scope, userLogin) {
	  var vm = this;
	  vm.loginName;
	  vm.loginPassword;
	  vm.currentUser;
	  vm.test = "test";
	
	  vm.login = function () {
	    var login = userLogin.login(vm.loginName, vm.loginPassword);
	    login.then(function (res) {
	      if (res.status === 200) {
	        var resData = JSON.parse(res.config.data);
	        vm.currentUser = resData.userName;
	      }
	    });
	  };
	}

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(23);

/***/ },
/* 23 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').directive('navBar', function () {
	  return {
	    scope: true,
	    restrict: 'A',
	    replace: false,
	    templateUrl: 'templates/navigation.html',
	    link: function link(scope, elem, attrs) {
	
	      $('.ui.modal').modal({
	        allowMultiple: false
	      });
	
	      $('#sign-up-btn').click(function () {
	        $('#sign-up-modal').modal('show');
	      });
	
	      $('#log-in-btn').click(function () {
	        $('#log-in-modal').modal('show');
	      });
	
	      $('#player-toggle').click(function () {
	        $('#player-menu').toggle('slide');
	      });
	    }
	  };
	});

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(20);
	__webpack_require__(22);
	__webpack_require__(25);

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(26);

/***/ },
/* 26 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp').factory('userLogin', ['$http', function ($http) {
	
	  return {
	    login: login
	  };
	
	  function login(userName, password) {
	
	    var query = JSON.stringify({
	      userName: userName,
	      password: password
	    });
	
	    return $http({
	      data: query,
	      url: '/users/login',
	      method: 'POST'
	    });
	  }
	}]);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(28);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(30)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./styles.scss", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!./styles.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(29)();
	// imports
	
	
	// module
	exports.push([module.id, "#landing {\n  background-size: cover;\n  margin-left: 0px;\n  margin-right: 0px;\n  height: 700px;\n  background-attachment: fixed; }\n\n#jumbotron {\n  padding-top: 10%;\n  padding-left: 8%;\n  top: 200px;\n  left: 60px; }\n  #jumbotron p {\n    color: black; }\n\n#jumbotron-title {\n  font-family: helvetica;\n  font-size: 3em;\n  color: orange; }\n\n#jumbotron-text {\n  font-size: 1.4em;\n  width: 600px; }\n  #jumbotron-text p {\n    color: white; }\n\n.hero-overlay {\n  z-index: 1;\n  background-color: rgba(0, 0, 0, 0.3);\n  height: 100%;\n  width: 100%; }\n\n#hero-img {\n  width: 1460px;\n  -webkit-filter: contrast(70%); }\n\n#start-button {\n  margin-top: 80px; }\n  #start-button button {\n    width: 300px;\n    font-family: lato;\n    padding-top: 20;\n    padding-bottom: 20px;\n    font-size: 1.1em; }\n\n/*Information Section */\n#information-section {\n  height: 650px; }\n\n.both-sections {\n  height: 100%;\n  -webkit-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.75); }\n\n#section-text h2 {\n  display: inline-block; }\n\n#section-title {\n  margin-top: 60px;\n  margin-left: 20%;\n  width: 200px; }\n  #section-title h2 {\n    font-size: 3em;\n    font-family: helvetica; }\n  #section-title p {\n    font-size: 1.1em;\n    font-family: lato; }\n\n#first-section {\n  display: inline-block;\n  background-color: black;\n  height: 100%;\n  background-color: #f1e767;\n  background: #f1e767;\n  background: -moz-linear-gradient(top, #f1e767 0%, #ff8300 100%);\n  background: -webkit-gradient(left top, left bottom, color-stop(0%, #f1e767), color-stop(100%, #ff8300));\n  background: -webkit-linear-gradient(top, #f1e767 0%, #ff8300 100%);\n  background: -o-linear-gradient(top, #f1e767 0%, #ff8300 100%);\n  background: -ms-linear-gradient(top, #f1e767 0%, #ff8300 100%);\n  background: linear-gradient(to bottom, #f1e767 0%, #ff8300 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f1e767', endColorstr='#ff8300', GradientType=0 ); }\n\n#second-section {\n  display: inline-block;\n  height: 100%;\n  background-size: cover;\n  background-repeat: no-repeat; }\n\n/* Music Section */\n#music-section {\n  margin-left: 0 !important; }\n\n#music-player-header {\n  width: 100%;\n  height: 81px;\n  background-color: #212223;\n  border-bottom: solid 1px;\n  -webkit-box-shadow: 0px -2px 5px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 0px -2px 5px 0px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px -2px 5px 0px rgba(0, 0, 0, 0.75); }\n\n/*Media Query */\n@media (max-width: 1000px) {\n  #section-title h2 {\n    font-size: 2em;\n    font-family: helvetica; }\n  #section-title p {\n    font-size: 1em;\n    font-family: lato; } }\n\n@media (max-width: 760px) {\n  #landing {\n    height: 600px; } }\n\n@media (max-width: 760px) {\n  #start-button button {\n    width: 200px; }\n  #landing {\n    height: 400px;\n    margin-left: 0px !important;\n    margin-right: 0px !important; }\n  #information-section {\n    margin-left: 0px !important;\n    margin-right: 0px !important; }\n  #jumbotron {\n    padding-top: 20%; }\n  #jumbotron-title {\n    font-family: helvetica;\n    font-size: 2em;\n    color: orange; }\n  #start-button button {\n    font-size: 1em; }\n  #jumbotron-text {\n    font-size: 1em;\n    width: 600px; }\n    #jumbotron-text p {\n      color: white; } }\n\n@media (max-width: 760px) {\n  #first-section {\n    height: 50%; }\n  #second-section {\n    height: 50%; }\n  #section-title {\n    width: 400px;\n    margin-left: 30%;\n    margin-top: 30px; }\n    #section-title h2 {\n      font-size: 3em; }\n    #section-title p {\n      font-size: 1.1em; } }\n\n@media (min-height: 800px) {\n  #landing {\n    height: 800px; } }\n\n@media (min-height: 900px) {\n  #landing {\n    height: 900px; } }\n\n@media (min-height: 900px) {\n  #landing {\n    height: 980px; } }\n\n@media handheld {\n  body {\n    width: 180vw; } }\n\n/* Global */\nli {\n  list-style-type: none; }\n\n.grid-space {\n  margin-top: 0rem !important; }\n\n.hidden {\n  display: none !important; }\n\n.ui .grid {\n  margin-right: 0 !important; }\n\n/* Main */\n#music-app {\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin-top: 0px;\n  font-size: 1.1em; }\n\n#player-logo {\n  color: #FF8300;\n  font-size: 45px;\n  font-family: helvetica;\n  position: relative;\n  left: -53.5px;\n  cursor: default; }\n\n#player-logo-img {\n  width: 70px;\n  margin-left: 10px; }\n\n#player-toggle {\n  color: #828282;\n  display: inline-block;\n  font-size: 20px;\n  top: -15;\n  position: relative;\n  left: -30px;\n  visibility: hidden; }\n\n#player-toggle:hover {\n  color: white; }\n\n/*Search Fields */\n#search-header {\n  font-weight: 900; }\n\n#search-type {\n  margin-bottom: 10px; }\n\n.soundcloud {\n  color: #ff8800; }\n\n.spotify {\n  color: #2ebd59; }\n\n#spotify-icon {\n  margin-left: 4%; }\n\n#sc-icon {\n  margin-left: 4%; }\n\n#icon-box {\n  margin-left: 2px;\n  cursor: pointer;\n  margin-top: 7px; }\n\n#sc-box {\n  width: 180px;\n  border-radius: 0px; }\n\n#spotify-box {\n  width: 180px;\n  border-radius: 0px; }\n\n/*player Tabs*/\n#player-menu {\n  float: left;\n  width: 270px !important;\n  display: inline;\n  color: #828282;\n  background-color: #212223;\n  margin-right: 80px;\n  padding-left: 35px;\n  padding-top: 60px;\n  padding-bottom: 60px; }\n\n#main {\n  margin-top: 30px;\n  font-weight: 900; }\n\n#main-home {\n  margin-top: 8px;\n  margin-left: 7px;\n  font-weight: 300; }\n\n#playlist-add {\n  margin-left: 7px;\n  font-weight: 300;\n  cursor: pointer;\n  -webkit-transform: translateZ(0);\n  transform: translateZ(0);\n  box-shadow: 0 0 1px transparent;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n  -webkit-transition-duration: 0.3s;\n  transition-duration: 0.3s;\n  -webkit-transition-property: color, background-color;\n  transition-property: color, background-color; }\n\n#playlist-add:hover {\n  background-color: #FF8300;\n  color: white; }\n\n#playlist-header {\n  margin-bottom: 8px; }\n\n#playlist-field {\n  width: 100px;\n  display: block;\n  font-weight: 300;\n  font-size: 1em;\n  margin-left: 27px; }\n\n#playlists {\n  margin-top: 10px;\n  font-weight: 900; }\n\n.playlist-tab {\n  margin-left: 7px;\n  font-weight: 300; }\n\n.music-tab {\n  cursor: pointer;\n  list-style-type: none;\n  -webkit-transform: translateZ(0);\n  transform: translateZ(0);\n  box-shadow: 0 0 1px transparent;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -moz-osx-font-smoothing: grayscale;\n  overflow: hidden;\n  -webkit-transition-duration: 0.3s;\n  transition-duration: 0.3s;\n  -webkit-transition-property: color, background-color;\n  transition-property: color, background-color; }\n\n.music-tab:hover {\n  background-color: #FF8300;\n  color: white; }\n\n/*Player Pages */\n#pages-section {\n  display: inline-block;\n  color: #828282;\n  cursor: default;\n  width: 80%; }\n\n.hidden {\n  display: none; }\n\n.music-page {\n  list-style-type: none; }\n\n.page-structure {\n  padding-top: 30px;\n  padding-left: 80px; }\n\n#track-list {\n  margin-top: 30px; }\n\n.list-title {\n  color: black; }\n\n/* Home Page */\n#home-content {\n  padding-top: 100px; }\n  #home-content h4 {\n    font-size: 1.8em;\n    padding-bottom: 40px; }\n\n.artist-box {\n  display: inline-block;\n  height: 200px !important;\n  width: 200px !important;\n  background-size: cover;\n  /*margin-right: 60px;*/\n  margin-bottom: 60px;\n  padding: 0px; }\n  .artist-box img {\n    height: 100%;\n    width: 100%; }\n\n/* Music Player*/\n#music-player {\n  margin-top: 50px;\n  left: -20;\n  width: 215px;\n  padding-right: 15px; }\n\n#player-track-title {\n  margin-bottom: 0px; }\n\n#track-info {\n  margin-top: 10px;\n  text-align: center; }\n\n#player-track-artist {\n  margin-bottom: 0px; }\n\n#player-img {\n  width: 180px;\n  height: 150px; }\n\n#player-controls {\n  text-shadow: #fff 0 0 10px;\n  text-align: center;\n  margin-top: 10px;\n  color: #FF8300; }\n\n/* Track List */\n#search-list {\n  margin-top: 20px; }\n  #search-list h4 {\n    font-size: 1.8em; }\n\n#playlist-list {\n  margin-top: 20px; }\n  #playlist-list h4 {\n    font-size: 1.8em; }\n\n.songs {\n  list-style: none; }\n\n.song-description {\n  padding-left: 70px !important; }\n\n.song-img {\n  width: 150px;\n  height: 150px; }\n\n.song-option-icon {\n  margin-left: 10px;\n  margin-right: 3px; }\n\n.song-play {\n  color: #FF8300;\n  margin-bottom: 15px; }\n\n.song-play-btn {\n  cursor: pointer; }\n\n.song-list-info {\n  margin-top: 10px; }\n\n.dropdown-text {\n  display: inline; }\n\n.playlist-add-button {\n  width: 100px !important;\n  padding: 8px !important; }\n\n.delete-button {\n  width: 100px;\n  font-size: .9em !important; }\n\n/*media queries*/\n@media (min-width: 1700px) {\n  #song-interface {\n    padding-left: 150px; }\n  #playlist-page {\n    padding-left: 150px; } }\n\n@media (max-width: 1000px) {\n  .song-img {\n    width: 100px;\n    height: 100px; }\n  .song-description {\n    padding-left: 50px;\n    font-size: 14px; } }\n\n@media (max-width: 870px) {\n  #player-toggle {\n    visibility: visible; }\n  #music-app {\n    margin-left: 0px; }\n  #song-interface {\n    padding-left: 30px;\n    width: 100% !important; }\n  #pages-section {\n    width: 100% !important;\n    padding-left: 0px; }\n  #home-page {\n    padding-left: 15px; }\n  #logo-title {\n    visibility: hidden; }\n  #player-menu {\n    position: absolute;\n    z-index: 1;\n    margin-top: 0px;\n    margin-left: 10px;\n    padding-left: 10px;\n    padding-right: 0px;\n    display: none; } }\n\n@media (min-width: 870px) {\n  #player-menu {\n    display: inline-block !important; } }\n\n@media handheld {\n  #landing {\n    height: 700px; } }\n\n#navigation {\n  border-radius: 0px !important;\n  margin-bottom: 0px; }\n\n#logo {\n  margin-right: 60px;\n  margin-left: 80px;\n  font-family: helvetica; }\n\n#logo-title-m {\n  color: #FF8300;\n  position: absolute;\n  left: -66px;\n  font-size: 45px; }\n\n#logo-title {\n  position: relative;\n  top: 10px;\n  font-size: 25px;\n  left: -20px;\n  color: white;\n  letter-spacing: 1px; }\n\n#logo-picture {\n  width: 70px;\n  position: absolute;\n  left: -82px;\n  top: -18px; }\n\n/* Modal */\n#sign-up-modal {\n  width: 600px; }\n\n#modal-background {\n  height: 500px;\n  background-size: cover;\n  background-repeat: no-repeat; }\n\n.header {\n  padding-top: 80px;\n  text-align: center; }\n\n.actions-bar {\n  text-align: center !important; }\n\n#sign-up-modal-title {\n  font-size: 2em !important; }\n\n#sign-up-fields {\n  text-align: left;\n  width: 60%;\n  margin-top: 60px;\n  margin-left: auto;\n  margin-right: auto; }\n  #sign-up-fields label {\n    font-size: 1.2em;\n    color: #FF8300; }\n\n/*media queries*/\n", ""]);
	
	// exports


/***/ },
/* 29 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';
	
	angular.module('musicApp', []);

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,